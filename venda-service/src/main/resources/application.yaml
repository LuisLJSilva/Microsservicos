spring:
  application:
    name: VENDA-SERVICE
server:
  port: 8087

logging:
  pattern:
    level: 5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]


eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
      #    com Docker
      #    defaultZone: http://eureka-server:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
      sampling:
        probability: 1.0

resilience4j.circuitbreaker:
  instances:
    produtoService:
      registerHealthIndicator: true
      slidingWindowSize: 100
      minimumNumberOfCalls: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true

resilience4j.retry:
  instances:
    produtoService:
      maxRetryAttempts: 3
      waitDuration: 1000
